<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>jamesoff.net</title>
    <description>Write an awesome description for your new site here. You can edit this line in _config.yml. It will appear in your document head meta (for Google search results) and in your feed.xml site description.</description>
    <link>/</link>
    <atom:link href="/feed.xml" rel="self" type="application/rss+xml" />
    
      <item>
        <title>YNAB category check workflow for Alfred 2</title>
        <description>&lt;p&gt;This is a workflow which lets you look up how much you have left in a &lt;a href=&quot;http://www.youneedabudget.com&quot;&gt;You Need a Budget&lt;/a&gt; category for the current month.&lt;/p&gt;

&lt;p&gt;It looks for your budget file in &lt;code&gt;~/Dropbox/YNAB&lt;/code&gt; and &lt;code&gt;~/Documents/YNAB&lt;/code&gt;. If you have a single budget in one of those folders, it will use that and needs no configuration. If you have multiple budgets, or a budget somewhere else, you can use a File Action on it to select it as the budget to use.&lt;/p&gt;

&lt;p&gt;Fuzzy/substring matching, tries to use the currency symbol/format based on the budget’s configuration.&lt;/p&gt;

&lt;p&gt;Hacked up the code to parse the YNAB data myself, so please make sure that it’s reporting accurately for you :)&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://sakaki.jamesoff.net/~james/Screen Shot 2013-07-19 at 23.23.02.png&quot; alt=&quot;screenshot&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://sakaki.jamesoff.net/~james/Screen Shot 2013-07-19 at 23.21.37.png&quot; alt=&quot;screenshot&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Download here: &lt;a href=&quot;http://cloud.jamesoff.net/2C04451d3R3Q&quot;&gt;http://cloud.jamesoff.net/2C04451d3R3Q&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;(Updated 2014-08-27 to fix 0.00 values being shown as “overspent”, and to add caching to speed up results.)&lt;/p&gt;
</description>
        <pubDate>Sat, 20 Jul 2013 15:29:40 +0100</pubDate>
        <link>/coding/mac%20os%20x/alfred/2013/07/20/ynab-category-check-workflow-for-alfred-2/</link>
        <guid isPermaLink="true">/coding/mac%20os%20x/alfred/2013/07/20/ynab-category-check-workflow-for-alfred-2/</guid>
      </item>
    
      <item>
        <title>VMware Fusion keyboard layout</title>
        <description>&lt;p&gt;If you’re using VMware Fusion and can’t get the keyboard layout right in your VM (especially if you can’t get backslash to show up), try my &lt;a href=&quot;http://jamesoff.net/site/code/windows/happy-hacking-uk-layout&quot;&gt;Happy Hacking UK layout&lt;/a&gt;. This gives me the correct layout on my MBP at least :)&lt;/p&gt;

&lt;p&gt;My MBP has the &lt;code&gt;\&lt;/code&gt; key (&lt;code&gt;shift-\&lt;/code&gt; is &lt;code&gt;|&lt;/code&gt;) above the return key and to the right of the &lt;code&gt;]&lt;/code&gt; key. Note that because this is the UK layout, it makes &lt;code&gt;shift-2&lt;/code&gt; generate double-quote &lt;code&gt;&quot;&lt;/code&gt;, and shift-single-quote generate &lt;code&gt;@&lt;/code&gt;. For personal reasons, &lt;code&gt;shift-3&lt;/code&gt; generates hash &lt;code&gt;#&lt;/code&gt;. To obtain the GBP Sterling currency symbol &lt;code&gt;£&lt;/code&gt;, use &lt;code&gt;right alt-3&lt;/code&gt;.&lt;/p&gt;
</description>
        <pubDate>Fri, 09 Nov 2012 20:36:32 +0000</pubDate>
        <link>/uncategorized/2012/11/09/vmware-fusion-keyboard-layout/</link>
        <guid isPermaLink="true">/uncategorized/2012/11/09/vmware-fusion-keyboard-layout/</guid>
      </item>
    
      <item>
        <title>Alfred script to toggle AirPort</title>
        <description>&lt;p&gt;&lt;b&gt;Please see my &lt;a href=&quot;http:&amp;#47;&amp;#47;jamesoff.net&amp;#47;site&amp;#47;alfred-extensions&amp;#47;&quot;&gt;Alfred Extensions&amp;lt;&amp;#47;a&amp;gt; page for updates!&amp;lt;&amp;#47;b&amp;gt;
&lt;p&gt;A quick and easy one for Alfred: a command which toggles AirPort on&amp;#47;off.&lt;/p&gt;
&lt;p&gt;If you are using Alfred 0.9.9 (or better), you should be able to download &lt;a href=&quot;http:&amp;#47;&amp;#47;cl.ly&amp;#47;2m0G3a110E141B3j3t03&quot;&gt;this ZIP file&amp;lt;&amp;#47;a&amp;gt; and import it!
&lt;p&gt;If you are using an earlier version of Alfred, follow these instructions:&lt;/p&gt;
&lt;pre lang=&quot;bash&quot;&gt;AIRPORT=`networksetup -getairportpower AirPort | grep Off`; if [ &quot;$?&quot; = &quot;0&quot; ]; then networksetup -setairportpower AirPort on; MSG=&quot;AirPort enabled&quot;; else networksetup -setairportpower Airport off; MSG=&quot;AirPort disabled&quot;; fi; &amp;#47;usr&amp;#47;local&amp;#47;bin&amp;#47;growlnotify -m &quot;$MSG&quot; -a &quot;&amp;#47;Applications&amp;#47;Utilities&amp;#47;Airport Utility.app&quot; AirPort status&amp;lt;&amp;#47;pre&amp;gt;
&lt;p&gt;Create as a terminal script and configure it to be silent. I also borrowed the icon from AirPort utility for the script (Alfred for &quot;airport&quot; and then use Reveal in Finder on it; Get Info; click Icon and &amp;acirc;&amp;OElig;&amp;tilde;C; click the icon area in Alfred and &amp;acirc;&amp;OElig;&amp;tilde;V).&lt;/p&gt;
&lt;p&gt;&amp;lt;img src=&quot;http:&amp;#47;&amp;#47;f.cl.ly&amp;#47;items&amp;#47;0l3e1R2t3Z35233r310U&amp;#47;Screen%20shot%202011-07-13%20at%2009.19.44.png&quot; alt=&quot;Script configuration screenshot&quot; &amp;#47;&amp;gt;&lt;/p&gt;
&lt;/pre&gt;&lt;/a&gt;&lt;/p&gt;&lt;/a&gt;&lt;/b&gt;&lt;/p&gt;
</description>
        <pubDate>Wed, 13 Jul 2011 13:25:41 +0100</pubDate>
        <link>/mac%20os%20x/2011/07/13/alfred-script-to-toggle-airport/</link>
        <guid isPermaLink="true">/mac%20os%20x/2011/07/13/alfred-script-to-toggle-airport/</guid>
      </item>
    
      <item>
        <title>Alfred script to change network location in OS X</title>
        <description>&lt;p&gt;&lt;b&gt;Please see my &lt;a href=&quot;http:&amp;#47;&amp;#47;jamesoff.net&amp;#47;site&amp;#47;alfred-extensions&amp;#47;&quot;&gt;Alfred Extensions&amp;lt;&amp;#47;a&amp;gt; page for updates!&amp;lt;&amp;#47;b&amp;gt;
&lt;p&gt;I wrote this little scriptlet to change network location in OS X using &lt;a href=&quot;http:&amp;#47;&amp;#47;alfredapp.com&quot;&gt;Alfred&amp;lt;&amp;#47;a&amp;gt;, but you could trigger it using whatever method you wanted.
&lt;p&gt;If you&#39;re using Alfred 0.9.9 or later, you should be able to download &lt;a href=&quot;http:&amp;#47;&amp;#47;cl.ly&amp;#47;2t1O2G16341p2E1z3407&quot;&gt;this ZIP file&amp;lt;&amp;#47;a&amp;gt; and import it!
&lt;p&gt;if you using an earlier version, follow the instructions below:&lt;/p&gt;
&lt;p&gt;&lt;strike&gt;
&lt;pre lang=&quot;bash&quot;&gt;&amp;#47;usr&amp;#47;sbin&amp;#47;scselect 2&amp;gt;&amp;amp;1 | &amp;#47;usr&amp;#47;bin&amp;#47;grep -i {query} | &amp;#47;usr&amp;#47;bin&amp;#47;cut -c 4-39 | &amp;#47;usr&amp;#47;bin&amp;#47;xargs &amp;#47;usr&amp;#47;sbin&amp;#47;scselect&amp;lt;&amp;#47;pre&amp;gt;&amp;lt;&amp;#47;strike&amp;gt;
&lt;p&gt;&lt;b&gt;UPDATE&amp;lt;&amp;#47;b&amp;gt; 2011-06-11: I have significantly improved the script to work around a bug caused by the 3Connect profile (3Connect is pants FYI), as well as use `growlnotify` to tell you if the change worked or not. It also allows substring matches (anchored at the start) so you can use &quot;auto&quot; for &quot;Automatic&quot;. If you have more than one profile that starts with a matching substring, the behaviour is currently undefined.
&lt;p&gt;&lt;a href=&quot;http:&amp;#47;&amp;#47;jamesoff.net&amp;#47;site&amp;#47;wp-content&amp;#47;uploads&amp;#47;2011&amp;#47;06&amp;#47;Screen-shot-2011-06-11-at-19.02.40.png&quot;&gt;&amp;lt;img src=&quot;http:&amp;#47;&amp;#47;jamesoff.net&amp;#47;site&amp;#47;wp-content&amp;#47;uploads&amp;#47;2011&amp;#47;06&amp;#47;Screen-shot-2011-06-11-at-19.02.40.png&quot; alt=&quot;Growl showing network change notification&quot; title=&quot;Screen shot 2011-06-11 at 19.02.40&quot; width=&quot;322&quot; height=&quot;100&quot; class=&quot;alignnone size-full wp-image-441&quot; &amp;#47;&amp;gt;&amp;lt;&amp;#47;a&amp;gt;
&lt;pre lang=&quot;bash&quot;&gt;MSG=`&amp;#47;usr&amp;#47;sbin&amp;#47;scselect 2&amp;gt;&amp;amp;1 | &amp;#47;usr&amp;#47;bin&amp;#47;egrep -i &quot;\({query}&quot; | &amp;#47;usr&amp;#47;bin&amp;#47;cut -c 4- | &amp;#47;usr&amp;#47;bin&amp;#47;cut -f 1 | &amp;#47;usr&amp;#47;bin&amp;#47;head -n 1 | &amp;#47;usr&amp;#47;bin&amp;#47;xargs &amp;#47;usr&amp;#47;sbin&amp;#47;scselect | &amp;#47;usr&amp;#47;bin&amp;#47;sed -E &#39;s&amp;#47;.+ \((.+)\)&amp;#47;Location changed to \1&amp;#47;&#39;`; if [ &quot;$MSG&quot; = &quot;&quot; ]; then &amp;#47;usr&amp;#47;local&amp;#47;bin&amp;#47;growlnotify -a &amp;#47;System&amp;#47;Library&amp;#47;PreferencePanes&amp;#47;Network.prefPane -m &quot;Unable to change location&quot; Error; else &amp;#47;usr&amp;#47;local&amp;#47;bin&amp;#47;growlnotify -a &amp;#47;System&amp;#47;Library&amp;#47;PreferencePanes&amp;#47;Network.prefPane -m &quot;$MSG&quot; Location changed; fi;&amp;lt;&amp;#47;pre&amp;gt;
&lt;p&gt;If you want it without Growl notifications, use this version:&lt;/p&gt;
&lt;pre lang=&quot;bash&quot;&gt;usr&amp;#47;sbin&amp;#47;scselect 2&amp;gt;&amp;amp;1 | &amp;#47;usr&amp;#47;bin&amp;#47;egrep -i &quot;\({query}&quot; | &amp;#47;usr&amp;#47;bin&amp;#47;cut -c 4- | &amp;#47;usr&amp;#47;bin&amp;#47;cut -f 1 | &amp;#47;usr&amp;#47;bin&amp;#47;head -n 1 | &amp;#47;usr&amp;#47;bin&amp;#47;xargs &amp;#47;usr&amp;#47;sbin&amp;#47;scselect&amp;lt;&amp;#47;pre&amp;gt;
&lt;p&gt;It&#39;s slightly convoluted as it&#39;s case-insensitive. To use it, create a Terminal&amp;#47;Shell script entry like this:&lt;/p&gt;
&lt;p&gt;&amp;lt;img src=&quot;http:&amp;#47;&amp;#47;f.cl.ly&amp;#47;items&amp;#47;3t0B301j3Q2X102y1C0V&amp;#47;Screen%20shot%202011-06-09%20at%2020.38.05.png&quot; alt=&quot;Alfred settings&quot; &amp;#47;&amp;gt;&lt;/p&gt;
&lt;p&gt;Now you can just type &quot;location work&quot; or similar into Alfred to change network location. I&#39;ll add Growl-confirmation support when the next version of Alfred is released :)&lt;/p&gt;
&lt;/pre&gt;&lt;/pre&gt;&lt;/a&gt;&lt;/p&gt;&lt;/b&gt;&lt;/p&gt;&lt;/pre&gt;&lt;/strike&gt;&lt;/p&gt;&lt;/a&gt;&lt;/p&gt;&lt;/a&gt;&lt;/p&gt;&lt;/a&gt;&lt;/b&gt;&lt;/p&gt;
</description>
        <pubDate>Thu, 09 Jun 2011 23:43:32 +0100</pubDate>
        <link>/coding/mac%20os%20x/2011/06/09/alfred-script-to-change-network-location-in-os-x/</link>
        <guid isPermaLink="true">/coding/mac%20os%20x/2011/06/09/alfred-script-to-change-network-location-in-os-x/</guid>
      </item>
    
      <item>
        <title>tarsnap under cygwin</title>
        <description>&lt;p&gt;To get &lt;a href=&quot;http:&amp;#47;&amp;#47;beta.tarsnap.com&quot;&gt;tarsnap &amp;lt;&amp;#47;a&amp;gt;working under cygwin, here&#39;s what you need to do:
&lt;ol&gt;
&lt;li&gt;Install the following packages using the cygwin setup tool:
&lt;ul&gt;
&lt;li&gt;gcc4&amp;lt;&amp;#47;li&amp;gt;
&lt;li&gt;make&amp;lt;&amp;#47;li&amp;gt;
&lt;li&gt;openssl (needed for runtime, not for building)&amp;lt;&amp;#47;li&amp;gt;
&lt;li&gt;openssl-devel&amp;lt;&amp;#47;li&amp;gt;
&lt;li&gt;zlib-devel&amp;lt;&amp;#47;li&amp;gt;&lt;br /&gt;
&amp;lt;&amp;#47;ul&amp;gt;&amp;lt;&amp;#47;li&amp;gt;
&lt;li&gt;Download and extract the &lt;a href=&quot;https:&amp;#47;&amp;#47;beta.tarsnap.com&amp;#47;download.html&quot;&gt;tarsnap code&amp;lt;&amp;#47;a&amp;gt;.&amp;lt;&amp;#47;li&amp;gt;
&lt;li&gt;Run &lt;code&gt;.&amp;#47;configure&amp;lt;&amp;#47;code&amp;gt; (this seems to be much slower on cygwin than on other more UNIXy platforms)&amp;lt;&amp;#47;li&amp;gt;
&lt;li&gt;Run &lt;code&gt;make all install clean&amp;lt;&amp;#47;code&amp;gt;&amp;lt;&amp;#47;li&amp;gt;&lt;br /&gt;
&amp;lt;&amp;#47;ol&amp;gt;
&lt;p&gt;Tarsnap should now be installed and you can use it in the normal fashion - create a host key with &lt;code&gt;tarsnap-keygen&amp;lt;&amp;#47;code&amp;gt; and then get backing up!
&lt;p&gt;Edit 2009-12-16: checkers from #tarsnap on EFnet has written a post with scripts for Linux and Cygwin tarsnapping at &lt;a href=&quot;http:&amp;#47;&amp;#47;www.bluebottle.net.au&amp;#47;blog&amp;#47;2009&amp;#47;tarsnap-backups-on-windows-and-linux&quot;&gt;http:&amp;#47;&amp;#47;www.bluebottle.net.au&amp;#47;blog&amp;#47;2009&amp;#47;tarsnap-backups-on-windows-and-linux&amp;lt;&amp;#47;a&amp;gt;
&lt;p&gt;You may also wish at add `--prefix=&amp;#47;` to the `configure` command line, as `&amp;#47;usr&amp;#47;local` isn&#39;t in the default path.&lt;/p&gt;
&lt;/a&gt;&lt;/p&gt;&lt;/code&gt;&lt;/p&gt;&lt;/code&gt;&lt;/li&gt;&lt;/code&gt;&lt;/li&gt;&lt;/a&gt;&lt;/li&gt;&lt;/li&gt;&lt;/li&gt;&lt;/li&gt;&lt;/li&gt;&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;/ol&gt;&lt;/a&gt;&lt;/p&gt;
</description>
        <pubDate>Thu, 10 Sep 2009 15:36:31 +0100</pubDate>
        <link>/sysadmin/microsoft/2009/09/10/tarsnap-under-cygwin/</link>
        <guid isPermaLink="true">/sysadmin/microsoft/2009/09/10/tarsnap-under-cygwin/</guid>
      </item>
    
      <item>
        <title>Irssi typing speed script</title>
        <description>&lt;p&gt;I have written an irssi script which measures how fast you type on IRC and reports both words per minute and characters per minute.&lt;/p&gt;
&lt;p&gt;More details and download: &lt;a href=&quot;&amp;#47;site&amp;#47;irssi-scripts&amp;#47;wpm&amp;#47;&quot;&gt;WPM script&amp;lt;&amp;#47;a&amp;gt;.
&lt;/a&gt;&lt;/p&gt;
</description>
        <pubDate>Thu, 10 Apr 2008 18:40:45 +0100</pubDate>
        <link>/coding/my%20stuff/2008/04/10/irssi-typing-speed-script/</link>
        <guid isPermaLink="true">/coding/my%20stuff/2008/04/10/irssi-typing-speed-script/</guid>
      </item>
    
      <item>
        <title>vim as a man-page reader</title>
        <description>&lt;p&gt;Sure, why not :)&lt;/p&gt;
&lt;p&gt;This goes in your zshrc:&lt;/p&gt;
&lt;pre lang=&quot;bash&quot;&gt;
  vman() {&lt;br /&gt;
    if [ $# -eq 0 ]; then&lt;br /&gt;
      &amp;#47;usr&amp;#47;bin&amp;#47;man&lt;br /&gt;
    else&lt;br /&gt;
      if man -w $* &amp;gt;&amp;#47;dev&amp;#47;null 2&amp;gt;&amp;#47;dev&amp;#47;null&lt;br /&gt;
      then&lt;br /&gt;
        &amp;#47;usr&amp;#47;bin&amp;#47;man $* | col -b | vim -c &#39;set ft=man nomod&#39; -&lt;br /&gt;
      else&lt;br /&gt;
        echo No man page for $*&lt;br /&gt;
      fi&lt;br /&gt;
    fi&lt;br /&gt;
  }&lt;br /&gt;
  alias man=&#39;vman&#39;&lt;br /&gt;
&amp;lt;&amp;#47;pre&amp;gt;
&lt;p&gt;And this goes in your vimrc (in a suitable `augroup`):&lt;/p&gt;
&lt;pre lang=&quot;&quot;&gt;
  autocmd FileType man setlocal ro nonumber nolist fdm=indent fdn=2 sw=4 foldlevel=2 | nmap q :quit&lt;cr&gt;&lt;br /&gt;
&amp;lt;&amp;#47;pre&amp;gt;
&lt;p&gt;Now you&#39;ll get nicely highlighted man pages with folded sections, and you can hit `q` to quit just like `less`.&lt;/p&gt;
&lt;p&gt;&amp;lt;img src=&#39;http:&amp;#47;&amp;#47;jamesoff.net&amp;#47;site&amp;#47;wp-content&amp;#47;uploads&amp;#47;2008&amp;#47;03&amp;#47;vim-manpage.png&#39; alt=&#39;Vim as a manpage viewer&#39; &amp;#47;&amp;gt;&lt;/p&gt;
&lt;/cr&gt;&lt;/pre&gt;&lt;/pre&gt;
</description>
        <pubDate>Thu, 06 Mar 2008 21:56:09 +0000</pubDate>
        <link>/sysadmin/freebsd/linux/2008/03/06/vim-as-a-man-page-reader/</link>
        <guid isPermaLink="true">/sysadmin/freebsd/linux/2008/03/06/vim-as-a-man-page-reader/</guid>
      </item>
    
      <item>
        <title>irssi and ZNC</title>
        <description>&lt;p&gt;[ZNC](http:&amp;#47;&amp;#47;en.znc.in) is an IRC bouncer with some pretty nice features. For a number of reasons I wanted to move my ircing from home to a shell, so I decided to give ZNC a try. ZNC isn&#39;t in ports, but compiles fine using `gmake`.&lt;/p&gt;
&lt;p&gt;The only problem I encountered was getting it set up to work with multiple networks in irssi. Configuring ZNC itself to put me on many networks was easy enough, and when I connected irssi to it for each network using `&amp;#47;connect` it worked fine. Using `&amp;#47;server add` to set up irssi&#39;s server list didn&#39;t work out so well.&lt;/p&gt;
&lt;p&gt;Every time I tried to add another server (for connecting to another network), irssi would remove the first one. This is because irssi only considers a server&#39;s hostname and port when trying to work out if it&#39;s unique. When I added another server which differed from the first only by password and associated network, irssi assumed I was updating the existing one and changed it. Putting the required entries in irssi&#39;s config by hand also didn&#39;t work.&lt;/p&gt;
&lt;p&gt;The solution was easy enough; one ZNC instance can listen on multiple ports, so I got it to listen on a selection of ports using multiple `Listen` directives in its config file, and then added each network&#39;s server to irssi using a different port number.&lt;/p&gt;
&lt;p&gt;Now I can take advantage of cool things like buffer replay and detaching from channels. Sorry, irssi-proxy - you don&#39;t quite cut it now :)&lt;/p&gt;
</description>
        <pubDate>Fri, 22 Feb 2008 03:38:24 +0000</pubDate>
        <link>/internets/freebsd/2008/02/22/irssi-and-znc/</link>
        <guid isPermaLink="true">/internets/freebsd/2008/02/22/irssi-and-znc/</guid>
      </item>
    
      <item>
        <title>Old phones</title>
        <description>&lt;p&gt;While sorting out boxes of stuff hidden away in a cupboard (so I&#39;d have less pointless stuff to carry around when we move house), I came across some of my old mobile phones.&lt;/p&gt;
&lt;p&gt;Exactly why I kept them I&#39;m not sure, but I tend to find it difficult to throw old hardware away in general. I have a whole drawer of old ISA cards that I need to sort out later.&lt;/p&gt;
&lt;p&gt;&lt;script type=&quot;text&amp;#47;javascript&quot;&gt;&lt;!--&lt;br /&gt;
google_ad_client = &quot;ca-pub-0025928419571515&quot;;&lt;br /&gt;
&amp;#47;* RRG page *&amp;#47;&lt;br /&gt;
google_ad_slot = &quot;7833875895&quot;;&lt;br /&gt;
google_ad_width = 468;&lt;br /&gt;
google_ad_height = 60;&lt;br /&gt;
&amp;#47;&amp;#47;--&gt;&lt;br /&gt;
&lt;&amp;#47;script&gt;&lt;br /&gt;
&lt;script type=&quot;text&amp;#47;javascript&quot;&lt;br /&gt;
src=&quot;&amp;#47;&amp;#47;pagead2.googlesyndication.com&amp;#47;pagead&amp;#47;show_ads.js&quot;&gt;&lt;br /&gt;
&lt;&amp;#47;script&gt;&lt;/p&gt;
&lt;p&gt;About the only reason to keep stuff like this is to laugh at it years later:&lt;/p&gt;
&lt;p&gt;Ericsson SH888&lt;br /&gt;
--&lt;/p&gt;
&lt;p&gt;&lt;a href=&#39;http:&amp;#47;&amp;#47;jamesoff.net&amp;#47;site&amp;#47;wp-content&amp;#47;uploads&amp;#47;2008&amp;#47;02&amp;#47;dsc_4159.jpg&#39; title=&#39;Ericsson SH888&#39;&gt;&lt;img src=&#39;http:&amp;#47;&amp;#47;jamesoff.net&amp;#47;site&amp;#47;wp-content&amp;#47;uploads&amp;#47;2008&amp;#47;02&amp;#47;dsc_4159.thumbnail.jpg&#39; alt=&#39;Ericsson SH888&#39; &amp;#47;&gt;&lt;&amp;#47;a&gt;&lt;/p&gt;
&lt;p&gt;My first mobile phone, which I got in late 1999&amp;#47;early 2000 I think. It&#39;s definitely a &#39;brick&#39; phone, being shaped exactly like one only slightly bigger and less useful for contacting your friends. It has a three-line block character display so the most graphical part of the menus was an arrow character indicating where you could scroll. I remember two things in particular about this phone: it was very very slow and the way the battery clipped on the back meant pulling it out of your pocket could cut the power (before it had saved a record of who the incoming call was from).&lt;/p&gt;
&lt;p&gt;Nokia 7110&lt;br /&gt;
--&lt;/p&gt;
&lt;p&gt;&lt;a href=&#39;http:&amp;#47;&amp;#47;jamesoff.net&amp;#47;site&amp;#47;wp-content&amp;#47;uploads&amp;#47;2008&amp;#47;02&amp;#47;dsc_4160.jpg&#39; title=&#39;Nokia 7110 closed&#39;&gt;&lt;img src=&#39;http:&amp;#47;&amp;#47;jamesoff.net&amp;#47;site&amp;#47;wp-content&amp;#47;uploads&amp;#47;2008&amp;#47;02&amp;#47;dsc_4160.thumbnail.jpg&#39; alt=&#39;Nokia 7110 closed&#39; &amp;#47;&gt;&lt;&amp;#47;a&gt; &lt;a href=&#39;http:&amp;#47;&amp;#47;jamesoff.net&amp;#47;site&amp;#47;wp-content&amp;#47;uploads&amp;#47;2008&amp;#47;02&amp;#47;dsc_4161.jpg&#39; title=&#39;Nokia 7110 open&#39;&gt;&lt;img src=&#39;http:&amp;#47;&amp;#47;jamesoff.net&amp;#47;site&amp;#47;wp-content&amp;#47;uploads&amp;#47;2008&amp;#47;02&amp;#47;dsc_4161.thumbnail.jpg&#39; alt=&#39;Nokia 7110 open&#39; &amp;#47;&gt;&lt;&amp;#47;a&gt;&lt;/p&gt;
&lt;p&gt;This was my second phone which I got in mid-2000. It&#39;s a slide phone, a bit like the one used by Neo in The Matrix. It has a little silver button on the back which where your finger rests which makes the slide jump open. They were renowned for breaking, particularly if you let your friends play with them. The other gimmick of this phone was the roller control, which worked like a scroll wheel on a mouse. It was ok, although I think it was easy to accidentally scroll and select the item either side of what you actually wanted when you tried to click. There were a couple of scrollwheel-based games on it but nothing amazing. It was also a bit slow, but was my first phone with predictive text.&lt;/p&gt;
&lt;p&gt;Nokia 6820&lt;br /&gt;
--&lt;/p&gt;
&lt;p&gt;&lt;a href=&#39;http:&amp;#47;&amp;#47;jamesoff.net&amp;#47;site&amp;#47;wp-content&amp;#47;uploads&amp;#47;2008&amp;#47;02&amp;#47;dsc_4162.jpg&#39; title=&#39;Nokia 6820 closed&#39;&gt;&lt;img src=&#39;http:&amp;#47;&amp;#47;jamesoff.net&amp;#47;site&amp;#47;wp-content&amp;#47;uploads&amp;#47;2008&amp;#47;02&amp;#47;dsc_4162.thumbnail.jpg&#39; alt=&#39;Nokia 6820 closed&#39; &amp;#47;&gt;&lt;&amp;#47;a&gt; &lt;a href=&#39;http:&amp;#47;&amp;#47;jamesoff.net&amp;#47;site&amp;#47;wp-content&amp;#47;uploads&amp;#47;2008&amp;#47;02&amp;#47;dsc_4163.jpg&#39; title=&#39;Nokia 6820 open&#39;&gt;&lt;img src=&#39;http:&amp;#47;&amp;#47;jamesoff.net&amp;#47;site&amp;#47;wp-content&amp;#47;uploads&amp;#47;2008&amp;#47;02&amp;#47;dsc_4163.thumbnail.jpg&#39; alt=&#39;Nokia 6820 open&#39; &amp;#47;&gt;&lt;&amp;#47;a&gt;&lt;/p&gt;
&lt;p&gt;Skip forward a couple of handsets (a Nokia 6230 which was awesome and a Sony Z7 which was shit) and we arrive at the Nokia 6820. I could never actually remember this phone&#39;s model number and even now found it so unmemorable that I had to look under the battery three times. It was a pretty neat phone though, which swung open (and rotated 90 degrees) to give a split QWERTY keyboard for writing texts. It was marketed as a business phone but the mobile browser on it was so rubbish I think they&#39;d have been better sticking to branding it a phone for people who send a lot of SMSes. The QWERTY keyboard worked really well but the phone was let down by a display that was slow to update (very [Dual scan](http:&amp;#47;&amp;#47;en.wikipedia.org&amp;#47;wiki&amp;#47;Dual_Scan)) and was set about half a centimeter back from the plastic case which was a bit weird.&lt;/p&gt;
&lt;p&gt;All these phones have finally been consigned to the bin having at last served the purpose I probably kept them for - nostalgia.&lt;/p&gt;
&lt;/script&gt;&lt;/p&gt;
</description>
        <pubDate>Sun, 03 Feb 2008 21:15:24 +0000</pubDate>
        <link>/fun/2008/02/03/old-phones/</link>
        <guid isPermaLink="true">/fun/2008/02/03/old-phones/</guid>
      </item>
    
      <item>
        <title>TASK: Shoot yourself in the foot</title>
        <description>&lt;p&gt;I found this online somewhere while I was working at Grey Matter, and I&#39;ve had it printed out ever since. So I can recycle the hardcopy, I&#39;m reproducing it here. Feel free to add your own contributions in the comments :)&lt;/p&gt;
&lt;p&gt;*TASK: Shoot yourself in the foot*&lt;/p&gt;
&lt;p&gt; * C: You shoot yourself in the foot&lt;/p&gt;
&lt;p&gt; * C++: You accidentally create a dozen instances of yourself and shoot them all in the foot. Providing emergency medical assistance is impossible since you can&#39;t tell which are bitwise copies and which are just pointing at others and saying, &quot;That&#39;s me, over there.&quot;&lt;/p&gt;
&lt;p&gt; * FORTRAN: You shoot yourself in each toe iteratively until you run out toes, then you read in the next foot and repeat. If you run out of bullets, you continue with the attempts to shoot yourself anyway because you have no exception-handling capability.&lt;/p&gt;
&lt;p&gt; * Pascal: The compiler won&#39;t let you shoot yourself in the foot.&lt;/p&gt;
&lt;p&gt; * Ada: After correctly packing your foot, you attempt to concurrently load the gun, pull the trigger, scream, and shoot yourself in the foot. When you try, however, you discover you can&#39;t because your foot is of the wrong type.&lt;/p&gt;
&lt;p&gt; * COBOL: Using a COLT 45 HANDGUN, AIM gun at LEG, THEN place ARM.HAND.FINGER on HANDGUN.TRIGGER and SQUEEZE. THEN return HANDGUN to HOLSTER. CHECK whether SHOELACE needs to be RE-TIED.&lt;/p&gt;
&lt;p&gt; * LISP: You shoot yourself in the appendage which holds the gun with which you shoot yourself in the appendage which holds the gun with which you shoot yourself in the appendage which holds the gun with which you shoot yourself in the appendage which holds the gun with which you shoot yourself in the appendage which ...&lt;/p&gt;
&lt;p&gt; * FORTH: Foot in yourself shoot.&lt;/p&gt;
&lt;p&gt; * Prolog: You tell your program that you want to be shot in the foot. The program figures out how to do it, but the syntax doesn&#39;t permit it to explain it to you.&lt;/p&gt;
&lt;p&gt; * BASIC: Shoot yourself in the foot with a water pistol. On large systems, continue until entire lower body is waterlogged.&lt;/p&gt;
&lt;p&gt; * Visual Basic: You&#39;ll only appear to have shot yourself in the foot, but you&#39;ll have had so much fun doing it that you won&#39;t care.&lt;/p&gt;
&lt;p&gt; * HyperTalk: Put the first bullet of the gun into foot left of log of you. Answer the result.&lt;/p&gt;
&lt;p&gt; * Motif: You spend days writing a UIL description of your foot, the bullet, its trajectory, and the intricate scrollwork on the ivory handles of the gun. When you finally get around to pulling the trigger, the gun jams.&lt;/p&gt;
&lt;p&gt; * APL: You shoot yourself in the foot, then spend all day figuring out how to do it in fewer characters.&lt;/p&gt;
&lt;p&gt; * SNOBOL: If you succeed, shoot yourself in the left foot. If you fail, shoot yourself in the right foot.&lt;/p&gt;
&lt;p&gt; * Concurrent Euclid: You shoot yourself in somebody else&#39;s foot.&lt;/p&gt;
&lt;p&gt; * 370 JCL: You send your foot down to MIS and include a 400-page document explaining exactly how you want it to be shot. Three years later, your foot comes back deep fried.&lt;/p&gt;
&lt;p&gt; * Paradox: Not only can you shoot yourself in the foot, but your users can too.&lt;/p&gt;
&lt;p&gt; * Access: You try to point the gun at your foot, but it shoots holes in all your Borland distributions diskettes instead.&lt;/p&gt;
&lt;p&gt; * Revelation: You&#39;re sure you&#39;re going to be able to shoot yourself in the foot, just as soon as you figure out what all these nifty little bullet thingies are for.&lt;/p&gt;
&lt;p&gt; * Assembler: You try to shoot yourself in the foot, only to discover you must first invent the gun, the bullet, the trigger, and your foot.&lt;/p&gt;
&lt;p&gt; * Modula2: After realising that you can&#39;t actually accomplish anything in this language, you shoot yourself in the head.&lt;/p&gt;
</description>
        <pubDate>Sun, 22 Jul 2007 00:57:15 +0100</pubDate>
        <link>/coding/fun/2007/07/22/task-shoot-yourself-in-the-foot/</link>
        <guid isPermaLink="true">/coding/fun/2007/07/22/task-shoot-yourself-in-the-foot/</guid>
      </item>
    
  </channel>
</rss>
